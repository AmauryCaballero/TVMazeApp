// Mocks generated by Mockito 5.4.4 from annotations
// in tv_maze_app/test/data/repositories/series_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_maze_app/core/network/network_info.dart' as _i7;
import 'package:tv_maze_app/data/api/models/episode_model.dart' as _i3;
import 'package:tv_maze_app/data/api/models/series_model.dart' as _i2;
import 'package:tv_maze_app/data/datasources/series_local_data_source.dart'
    as _i6;
import 'package:tv_maze_app/data/datasources/series_remote_data_source.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSeriesModel_0 extends _i1.SmartFake implements _i2.SeriesModel {
  _FakeSeriesModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEpisodeModel_1 extends _i1.SmartFake implements _i3.EpisodeModel {
  _FakeEpisodeModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRemoteDataSource extends _i1.Mock
    implements _i4.SeriesRemoteDataSource {
  MockSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.SeriesModel>> getAllSeries(int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSeries,
          [page],
        ),
        returnValue:
            _i5.Future<List<_i2.SeriesModel>>.value(<_i2.SeriesModel>[]),
      ) as _i5.Future<List<_i2.SeriesModel>>);

  @override
  _i5.Future<List<_i2.SeriesModel>> searchSeries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSeries,
          [query],
        ),
        returnValue:
            _i5.Future<List<_i2.SeriesModel>>.value(<_i2.SeriesModel>[]),
      ) as _i5.Future<List<_i2.SeriesModel>>);

  @override
  _i5.Future<_i2.SeriesModel> getSeriesDetails(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getSeriesDetails,
          [id],
        ),
        returnValue: _i5.Future<_i2.SeriesModel>.value(_FakeSeriesModel_0(
          this,
          Invocation.method(
            #getSeriesDetails,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.SeriesModel>);

  @override
  _i5.Future<List<_i3.EpisodeModel>> getEpisodesBySeries(int? seriesId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEpisodesBySeries,
          [seriesId],
        ),
        returnValue:
            _i5.Future<List<_i3.EpisodeModel>>.value(<_i3.EpisodeModel>[]),
      ) as _i5.Future<List<_i3.EpisodeModel>>);

  @override
  _i5.Future<_i3.EpisodeModel> getEpisodeDetails(int? episodeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEpisodeDetails,
          [episodeId],
        ),
        returnValue: _i5.Future<_i3.EpisodeModel>.value(_FakeEpisodeModel_1(
          this,
          Invocation.method(
            #getEpisodeDetails,
            [episodeId],
          ),
        )),
      ) as _i5.Future<_i3.EpisodeModel>);
}

/// A class which mocks [SeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesLocalDataSource extends _i1.Mock
    implements _i6.SeriesLocalDataSource {
  MockSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.SeriesModel>> getLastSeries() => (super.noSuchMethod(
        Invocation.method(
          #getLastSeries,
          [],
        ),
        returnValue:
            _i5.Future<List<_i2.SeriesModel>>.value(<_i2.SeriesModel>[]),
      ) as _i5.Future<List<_i2.SeriesModel>>);

  @override
  _i5.Future<void> cacheSeries(List<_i2.SeriesModel>? seriesToCache) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheSeries,
          [seriesToCache],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
